!function(){"use strict";var e=class{constructor(e,t){var r,n,o;r=this,o=()=>this._inputList.every((e=>e.validity.valid)),(n=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(n="_checkFormValidity"))in r?Object.defineProperty(r,n,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[n]=o,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t}_setEventListeners(){this._inputList=[...this._form.querySelectorAll(this._inputSelector)],this._submitButton=this._form.querySelector(this._submitButtonSelector),this._toggleButtonState(),this._inputList.forEach((e=>{e.addEventListener("input",(t=>{this._checkInputValidity(e),this._toggleButtonState()}))}))}_showInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e){const t=this._form.querySelector(`#${e.id}-error`);e.classList.remove(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.remove(this._errorClass)}_toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):this.disableButton()}_hasInvalidInput(){return this._inputErrorClass.some((e=>!e.validity.valid))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}disableButton(){this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0}};class t{constructor(e,t){let{initialCards:r,handleImageClick:n}=e;this._name=r.name,this._link=r.link,this._handleImageClick=n,this._cardSelector=t}_setEventListeners(){this._element.querySelector(".cards__like-button").addEventListener("click",(()=>this._handleLikeIcon())),this._element.querySelector(".cards__remove-button").addEventListener("click",(()=>this._handleDeleteCard())),this._element.querySelector(".cards__image").addEventListener("click",(()=>this._handleImageClick({name:this._name,src:this._link})))}_handleLikeIcon(){this._element.querySelector(".cards__like-button").classList.toggle("card__like-button_active")}_handleDeleteCard(){this._element.remove()}_getTemplate(){return document.querySelector(this._cardSelector).content.querySelector(".cards__item").cloneNode(!0)}renderCard(){return this._element=this._getTemplate(),this._element.querySelector(".cards__image").src=this._link,this._element.querySelector(".cards__name").textContent=this._name,this._element.querySelector(".cards__image").alt=this._name,this._setEventListeners(),this._element}}const r=document.querySelector(".profile__add-button"),n=document.querySelector("#add-card-modal"),o=(document.querySelector("#add-close-button"),n.querySelector(".modal__form")),s=(o.querySelector(".form__input-title"),o.querySelector(".form__input-url"),document.querySelector("#profile-edit-button")),i=document.querySelector("#profile-edit-modal"),a=(document.querySelector("#profile-close-button"),document.querySelector(".profile__title"),document.querySelector(".profile__info-description"),document.querySelector(".form__input-name")),l=document.querySelector(".form__input-description"),c=(i.querySelector(".modal__form"),document.querySelector(".cards__list")),u=(document.querySelector("#card-template").content.firstElementChild,document.querySelector("#preview-image-modal"),document.querySelector("#preview-close-button"),"#card-template"),m={formSelector:".modal__form",inputSelector:".form__input",submitButtonSelector:".form__save-button",inactiveButtonClass:"popup__button_disabled",inputErrorClass:"form__input_type_error",errorClass:"popup__error_visible"},d=i.querySelector(".modal__form"),_=n.querySelector(".modal__form");function p(e,t,r){return(t=function(e){var t=function(e,t){if("object"!=typeof e||null===e)return e;var r=e[Symbol.toPrimitive];if(void 0!==r){var n=r.call(e,"string");if("object"!=typeof n)return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==typeof t?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}document.querySelector(".modal__preview-footer");class h{constructor(e){let{popupSelector:t}=e;p(this,"_handleEscClose",(e=>{"Escape"===e.key&&this.close()})),p(this,"_handleOverlay",(e=>{e.target.classList.contains("modal_opened")&&this.close()})),this._popup=document.querySelector(t)}open(){this._popup.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose),document.addEventListener("mousedown",this._handleOverlay)}close(){this._popup.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose),document.removeEventListener("mousedown",this._handleOverlay)}setEventListeners(){this._popup.addEventListener("click",(e=>{e.target.classList.contains("modal__close-button")&&this.close()}))}}var v=class extends h{constructor(e,t){super({popupSelector:e}),this._formEl=this._popup.querySelector(".modal__form"),this._handleFormSubmit=t,this._formInputs=this._popup.querySelectorAll(".form__input")}_getInputValues(){const e={};return this._formInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popup.addEventListener("submit",(e=>{e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this.close()}))}close(){super.close(),this._formEl.reset()}};const f=new e(m,d),y=new e(m,_),S=new v("#profile-edit-modal",(function(e){E.setUserInfo({name:e.title,job:e.description})})),b=new v("#add-card-modal",(function(e){w(e)})),g=new class extends h{constructor(e){super({popupSelector:e})}open(e,t){this._image=document.querySelector(".modal__preview-image"),this._popup.querySelector(".modal__preview-footer").textContent=e,this._image.src=t,this._image.alt=e,super.open()}}("#preview-image-modal"),E=new class{constructor(e){let{nameSelector:t,jobSelector:r}=e;this._nameElement=document.querySelector(t),this._jobElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){let{name:t,job:r}=e;this._nameElement.textContent=t,this._jobElement.textContent=r}}({nameSelector:".profile__title",jobSelector:".profile__info-description"}),L=new class{constructor(e,t){let{items:r,renderer:n}=e;this._items=r,this._renderer=n,this._cardList=t}renderItems(){this._items.forEach((e=>this._renderer(e)))}addItem(e){this._cardList.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:w},c);function w(e){const r=new t({initialCards:e,handleImageClick:e=>{const t={name:e.name,link:e.src};g.open(t.name,t.link)}},u).renderCard();L.addItem(r)}L.renderItems(),f.enableValidation(),y.enableValidation(),S.setEventListeners(),b.setEventListeners(),g.setEventListeners(),s.addEventListener("click",(()=>{S.open();const{job:e,name:t}=E.getUserInfo();a.value=t,l.value=e})),r.addEventListener("click",(()=>{y.disableButton(),b.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,